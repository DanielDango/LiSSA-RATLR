@inproceedings{wohlrab2019improving,
  title={Improving the consistency and usefulness of architecture descriptions: Guidelines for architects},
  author={Wohlrab, Rebekka and Eliasson, Ulf and Pelliccione, Patrizio and Heldal, Rogardt},
  booktitle={2019 IEEE International Conference on Software Architecture (ICSA)},
  pages={151--160},
  year={2019},
  organization={IEEE}
}
@inproceedings{fuchss2022establishing,
  title={Establishing a benchmark dataset for traceability link recovery between software architecture documentation and models},
  author={Fuch{\ss}, Dominik and Corallo, Sophie and Keim, Jan and Speit, Janek and Koziolek, Anne},
  booktitle={European Conference on Software Architecture},
  pages={455--464},
  year={2022},
  organization={Springer}
}
@article{pryzant2023automatic,
  title={Automatic prompt optimization with" gradient descent" and beam search},
  author={Pryzant, Reid and Iter, Dan and Li, Jerry and Lee, Yin Tat and Zhu, Chenguang and Zeng, Michael},
  journal={arXiv preprint arXiv:2305.03495},
  year={2023}
}
@inproceedings{fuchss2025lissa,
  title={LiSSA: Toward Generic Traceability Link Recovery through Retrieval-Augmented Generation},
  author={Fuch{\ss}, Dominik and Hey, Tobias and Keim, Jan and Liu, Haoyu and Ewald, Niklas and Thirolf, Tobias and Koziolek, Anne},
  booktitle={Proceedings of the IEEE/ACM 47th International Conference on Software Engineering. ICSE},
  volume={25},
  year={2025}
}
@article{hayes2006advancing,
  title={Advancing candidate link generation for requirements tracing: The study of methods},
  author={Hayes, Jane Huffman and Dekhtyar, Alex and Sundaram, Senthil Karthikeyan},
  journal={IEEE Transactions on Software Engineering},
  volume={32},
  number={1},
  pages={4--19},
  year={2006},
  publisher={IEEE}
}
@online{ewald2024retrieval,
  title = {Retrieval-Augmented Large Language Models for Traceability Link Recovery},
  author = {Ewald, Niklas},
  date = {2024},
  doi = {10.5445/IR/1000178218},
  url = {https://publikationen.bibliothek.kit.edu/1000178218},
  urldate = {2025-05-20},
  abstract = {Während der Entwicklung von Software werden viele Artefakte erstellt. Rückvervolgbarkeitsinformation zwischen ihnen sind wichtig für Aufgaben wie die Einhaltung von Anforderungen, Auswirkungsanalysen von Änderungen und das Auffinden von Dokumentationsinkonsistenzen. Das manuelle Erstellen von Rückverfolgbarkeitsverbindungen ist fehleranfällig und kostspielig. Eine Herausforderung besteht in den unterschiedlichen Abstraktionsebenen von Artefakten. Diese Arbeit verwendet Retrieval-Augmented Large Language Models, um diese semantische Lücke zu überbrücken, und bewertet diesen Ansatz in drei verschiedenen Aufgaben zur Wiederherstellung von Rückverfolgbarkeitsverbindungen. Kosten und Verarbeitungszeit werden niedrig gehalten, indem das Sprachmodell nur zur Klassifizierung von Artefaktpaaren verwendet wird, die Artefakte enthalten, die ähnlich zueinander sind. Für die Wiederherstellung von Rückverfolgbarkeitsverbindungen zwischen Anforderungen und Quellcode erzielt der Ansatz vergleichbare Ergebnisse zu dem Stand der Technik mit F1-Werten von 0.388 auf SMOS, 0.478 auf eTour und 0.313 auf iTrust. Für die Aufgaben der Rückverfolgbarkeitsverbindungen von Softwarearchitekturdokumentation zu Softwarearchitekturmodellen und von Softwarearchitekturdokumentation zu Quellcode erreicht der Ansatz nicht den Stand der Technik.},
  isbn = {9781000178210},
  langid = {ngerman},
  file = {C:\Users\clash\Zotero\storage\BXUQUDLA\Ewald - 2024 - Retrieval-Augmented Large Language Models for Traceability Link Recovery.pdf}
}
